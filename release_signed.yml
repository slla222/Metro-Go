name: Android Release (Signed) & Optional Play Publish

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Decode keystore
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > keystore.jks

      - name: Create signing gradle.properties
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          cat >> ~/.gradle/gradle.properties <<'EOF'
          MYAPP_UPLOAD_STORE_FILE=keystore.jks
          MYAPP_UPLOAD_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }}
          MYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          MYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}
          EOF

      - name: Inject signing config
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          sed -i 's/isMinifyEnabled = false/isMinifyEnabled = false\n\n    signingConfigs {\n      create("release") {\n        storeFile = file(System.getProperty("user.home") + "\/\.gradle\/keystore.jks")\n        storePassword = providers.gradleProperty("MYAPP_UPLOAD_STORE_PASSWORD").get()\n        keyAlias = providers.gradleProperty("MYAPP_UPLOAD_KEY_ALIAS").get()\n        keyPassword = providers.gradleProperty("MYAPP_UPLOAD_KEY_PASSWORD").get()\n      }\n    }\n\n    buildTypes {\n      release {\n        signingConfig = signingConfigs.getByName("release")\n/' app/build.gradle.kts

      - name: Build Release AAB
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: 8.7
          arguments: :app:bundleRelease

      - name: Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: metroalarm-release
          path: app/build/outputs/bundle/release/*.aab
